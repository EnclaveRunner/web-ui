name: Release
on:
  workflow_run:
    workflows: [CI]
    branches: [main]
    types:
      - completed
jobs:
  update-version:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.version.outputs.version }}
      should_release: ${{ steps.version.outputs.hasNextVersion }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get next version
        uses: thenativeweb/get-next-version@main
        id: version
        with:
          prefix: "v"
      - name: Tag commit
        if: steps.version.outputs.hasNextVersion == 'true'
        run: |
          git config user.name "Enclave Bot"
          git config user.email "enclave@marvin-fuchs.de"
          git tag ${{ steps.version.outputs.version }}
          git push origin ${{ steps.version.outputs.version }}

  release:
    runs-on: ubuntu-latest
    needs: [update-version]
    permissions:
      contents: write
      actions: read
    if: needs.update-version.outputs.should_release == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate release notes
        id: release-notes
        run: |
          CURRENT_TAG="${{ needs.update-version.outputs.tag }}"

          # Get the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          # Get commits since last tag
          if [ -n "$PREVIOUS_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..$CURRENT_TAG)
            CONTRIBUTORS=$(git log --pretty=format:"%an" $PREVIOUS_TAG..$CURRENT_TAG | sort | uniq | sed 's/^/- /')
          else
            COMMITS=$(git log --pretty=format:"- %s (%h)" $CURRENT_TAG)
            CONTRIBUTORS=$(git log --pretty=format:"%an" $CURRENT_TAG | sort | uniq | sed 's/^/- /')
          fi

          # Create release notes
          cat > release_notes.md << EOF
          ## Changes

          $COMMITS

          ## Contributors

          $CONTRIBUTORS
          EOF

          echo "release_notes_file=release_notes.md" >> $GITHUB_OUTPUT
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          name: "Release ${{ needs.update-version.outputs.tag }}"
          tag: "${{ needs.update-version.outputs.tag }}"
          bodyFile: ${{ steps.release-notes.outputs.release_notes_file }}
          token: ${{ secrets.BOT_PAT }}
          draft: false
          prerelease: false
