name: Release
on:
  workflow_run:
    workflows: [CI]
    branches: [main]
    types:
      - completed
      
jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create release
        id: create_release
        run: |
          # Generate timestamp-based version
          VERSION="v$(date +%Y.%m.%d)-$(git rev-parse --short HEAD)"
          
          # Check if this exact version already exists
          if git tag | grep -q "^${VERSION}$"; then
            echo "Tag $VERSION already exists, skipping release"
            echo "should_release=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Get commits since last tag for release notes
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          if [ -n "$LATEST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" ${LATEST_TAG}..HEAD)
            CONTRIBUTORS=$(git log --pretty=format:"%an" ${LATEST_TAG}..HEAD | sort | uniq | sed 's/^/- /')
          else
            COMMITS=$(git log --pretty=format:"- %s (%h)" HEAD)
            CONTRIBUTORS=$(git log --pretty=format:"%an" HEAD | sort | uniq | sed 's/^/- /')
          fi

          # Create release notes
          cat > release_notes.md << EOF
          ## Changes

          $COMMITS

          ## Contributors

          $CONTRIBUTORS
          EOF

          # Create and push tag
          git config user.name "Enclave Bot"
          git config user.email "enclave-automation@marvin-fuchs.de"
          git tag $VERSION
          git push origin $VERSION

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "should_release=true" >> $GITHUB_OUTPUT
          echo "Created tag: $VERSION"

      - name: Create GitHub Release
        if: steps.create_release.outputs.should_release == 'true'
        uses: ncipollo/release-action@v1
        with:
          name: "Release ${{ steps.create_release.outputs.version }}"
          tag: "${{ steps.create_release.outputs.version }}"
          bodyFile: "release_notes.md"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
